

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2010 by Hex-Rays SA, <support@hex-rays.com>	    º
; º			 Licensed to: Freeware version			    º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; Input	MD5   :	099B7E4F4E0B0A21BE9B88286D40A239

' File Name   : C:\aitd2crk\aitd2crk.com
; Format      :	MS-DOS COM-file
; Base Address:	0h Range: 100h-2CDh Loaded length: 1CDh

		.386
		.model tiny

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
seg000		segment	byte public 'CODE' use16
		assume cs:seg000
		org 100h
		assume es:nothing, ss:nothing, ds:seg000, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

		public start
start		proc near

arg_2		= word ptr  4
arg_4		= word ptr  6

; FUNCTION CHUNK AT 0212 SIZE 000000BB BYTES

		jmp	loc_212
start		endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
a_INSTALL_CHECK	db 'RAZOR/Alone2'       ; DATA XREF: start+127o start+15Bo
dword_10F	dd 0			; DATA XREF: s_new_int_21h_113+4Br
					; start+165r ...

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


s_new_int_21h_113 proc far		; DATA XREF: start+1B4o
		pushf
		push	bp
		mov	bp, sp
		push	bx
		mov	bx, [bp+4]	; IP
		cmp	bx, 0Ch
		jnz	short loc_15B
		cmp	ah, 30h		;  get the DOS verison
		jnz	short loc_15B
		push	ax
		push	cx
		push	dx
		push	si
		push	di
		push	ds
		push	es
		mov	bx, [bp+6]	;  SEG
		add	bx, 2DFh
		mov	ds, bx
		mov	bx, 527h
		mov	ax, [bx]
		cmp	ax, 4874h
		jnz	short loc_154
		mov	al, 0EBh
		mov	[bx], al
		mov	ds, dx
		mov	bx, 21Ah
		mov	ax, [bx]
		cmp	ax, 0
		jnz	short loc_154
		mov	ax, 1
		mov	[bx], ax

loc_154:				; CODE XREF: s_new_int_21h_113+2Aj
					; s_new_int_21h_113+3Aj
		pop	es
		pop	ds
		pop	di
		pop	si
		pop	dx
		pop	cx
		pop	ax

loc_15B:				; CODE XREF: s_new_int_21h_113+Bj
					; s_new_int_21h_113+10j
		pop	bx
		pop	bp
		popf
		jmp	cs:dword_10F
s_new_int_21h_113 endp

; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
a_tsr_last_byte_163 db	  0		; DATA XREF: start+1C0o
aAloneInTheDark	db 'Alone in the Dark II CRACK',0Ah ; DATA XREF: start+118o
		db 0Dh,'by Snacky/RAZOR',0Ah
		db 0Dh,'on 20/11/1993',0Ah
		db 0Dh,'$'
aAlreadyInstall	db 'Already installed !!',0Ah ; DATA XREF: start:loc_288o
		db 0Dh,'(Remove with /r or -r)',0Ah
		db 0Dh,'$'
aInstalledOnIrq	db 'Installed on IRQ 21 !',0Ah ; DATA XREF: start+1BBo
		db 0Dh,'$'
aProgrammFromMe	db 'Programm from Memory Removed !!',0Ah ; DATA XREF: start+156o
		db 0Dh,'$'
aRazor		db 'RaZoR!'             ; DATA XREF: start+1A9o
		db    0
		db    0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
; START	OF FUNCTION CHUNK FOR start

loc_212:				; CODE XREF: startj
		mov	ax, cs
		mov	ds, ax
		mov	ah, 9
		mov	dx, offset aAloneInTheDark ; "Alone in the Dark	II CRACK\n\rby Snacky/R"...
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		mov	ax, 3521h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		sub	bx, 10h
		mov	di, bx
		mov	si, offset a_INSTALL_CHECK ; "RAZOR/Alone2"
		mov	cx, 0Bh
		repe cmpsb
		or	cx, cx
		jnz	short loc_294
		mov	si, 80h
		mov	cx, 14h
		lodsb
		cmp	al, 0
		jz	short loc_288

loc_23E:				; CODE XREF: start+147j
		lodsb
		cmp	al, '-'
		jz	short loc_24B
		cmp	al, '/'
		jz	short loc_24B
		loop	loc_23E
		jmp	short loc_288
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_24B:				; CODE XREF: start+141j start+145j
		lodsb
		and	al, 0DFh
		cmp	al, 'R'
		jz	short loc_254
		jmp	short loc_288
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_254:				; CODE XREF: start+150j
		mov	ah, 9
		mov	dx, offset aProgrammFromMe ; "Programm from Memory Removed !!\n\r$"
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		mov	di, offset a_INSTALL_CHECK ; "RAZOR/Alone2"
		mov	cx, 0Bh
		mov	al, 2Ah
		rep stosb
		mov	dx, word ptr es:dword_10F
		mov	ax, word ptr es:dword_10F+2
		mov	ds, ax
		mov	ax, 2521h
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		mov	bx, es
		mov	es, word ptr es:2Ch
		mov	ah, 49h
		int	21h		; DOS -	2+ - FREE MEMORY
					; ES = segment address of area to be freed
		mov	es, bx
		mov	ah, 49h
		int	21h		; DOS -	2+ - FREE MEMORY
					; ES = segment address of area to be freed
		jmp	short loc_28F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_288:				; CODE XREF: start+13Cj start+149j ...
		mov	dx, offset aAlreadyInstall ; "Already installed	!!\n\r(Remove with /r o"...
		mov	ah, 9
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"

loc_28F:				; CODE XREF: start+186j
		mov	ax, 4C00h
		int	21h		; DOS -	2+ - QUIT WITH EXIT CODE (EXIT)
					; AL = exit code
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_294:				; CODE XREF: start+131j
		mov	ax, 3521h
		int	21h		; DOS -	2+ - GET INTERRUPT VECTOR
					; AL = interrupt number
					; Return: ES:BX	= value	of interrupt vector
		mov	word ptr dword_10F+2, es
		mov	word ptr dword_10F, bx
		mov	bx, cs
		dec	bx
		mov	es, bx
		mov	di, 8
		mov	si, offset aRazor ; "RaZoR!"
		mov	cx, 8
		rep movsb
		mov	ax, 2521h
		mov	dx, offset s_new_int_21h_113
		int	21h		; DOS -	SET INTERRUPT VECTOR
					; AL = interrupt number
					; DS:DX	= new vector to	be used	for specified interrupt
		mov	ah, 9
		mov	dx, offset aInstalledOnIrq ; "Installed	on IRQ 21 !\n\r$"
		int	21h		; DOS -	PRINT STRING
					; DS:DX	-> string terminated by	"$"
		mov	dx, offset a_tsr_last_byte_163
		mov	cl, 4
		shr	dx, cl
		inc	dx
		mov	ax, 3100h
		int	21h		; DOS -	DOS 2+ - TERMINATE BUT STAY RESIDENT
; END OF FUNCTION CHUNK	FOR start	; AL = exit code, DX = program size, in	paragraphs
seg000		ends


		end start
